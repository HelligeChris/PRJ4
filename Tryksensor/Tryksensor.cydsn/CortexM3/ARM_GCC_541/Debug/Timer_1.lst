ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_1_initVar
  20              		.bss
  21              		.type	Timer_1_initVar, %object
  22              		.size	Timer_1_initVar, 1
  23              	Timer_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_1_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_1_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	Timer_1_Init, %function
  31              	Timer_1_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\Timer_1.c"
   1:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC5/Timer_1.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_1.c **** *
   5:Generated_Source\PSoC5/Timer_1.c **** * Description:
   6:Generated_Source\PSoC5/Timer_1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_1.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_1.c **** *
  15:Generated_Source\PSoC5/Timer_1.c **** * Note:
  16:Generated_Source\PSoC5/Timer_1.c **** *
  17:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_1.c **** 
  24:Generated_Source\PSoC5/Timer_1.c **** #include "Timer_1.h"
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 2


  25:Generated_Source\PSoC5/Timer_1.c **** 
  26:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_1.c **** 
  28:Generated_Source\PSoC5/Timer_1.c **** 
  29:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Init
  31:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_1.c **** *
  33:Generated_Source\PSoC5/Timer_1.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_1.c **** *
  36:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_1.c **** *  void
  38:Generated_Source\PSoC5/Timer_1.c **** *
  39:Generated_Source\PSoC5/Timer_1.c **** * Return:
  40:Generated_Source\PSoC5/Timer_1.c **** *  void
  41:Generated_Source\PSoC5/Timer_1.c **** *
  42:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Init(void) 
  44:Generated_Source\PSoC5/Timer_1.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_1.c ****             uint8 Timer_1_interruptState;
  48:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_1.c **** 
  50:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= Timer_1_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_1.c **** 
  54:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL2 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_1.c **** 
  59:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_1.c **** 
  63:Generated_Source\PSoC5/Timer_1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_1.c **** 
  69:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed == 2)
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 3


  70:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_1.c **** 
  76:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_1.c **** 
  82:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_1.c **** 
  84:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= Timer_1_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_1.c **** 
  90:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_1.c **** 
  95:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_1.c **** 
  99:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_1.c **** 
 103:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_1.c **** 
 105:Generated_Source\PSoC5/Timer_1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNC;
 108:Generated_Source\PSoC5/Timer_1.c **** 
 109:Generated_Source\PSoC5/Timer_1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_1.c **** 
 113:Generated_Source\PSoC5/Timer_1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL2 |= Timer_1_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_1.c **** 
 117:Generated_Source\PSoC5/Timer_1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WritePeriod(Timer_1_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 0B20     		movs	r0, #11
  48 0008 FFF7FEFF 		bl	Timer_1_WritePeriod
 119:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000c 0B20     		movs	r0, #11
  51 000e FFF7FEFF 		bl	Timer_1_WriteCounter
 120:Generated_Source\PSoC5/Timer_1.c **** 
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 4


 121:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CAPTURE_COUNT_CTRL |= Timer_1_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_SetCaptureCount(Timer_1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_1.c **** 
 126:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetCaptureMode(Timer_1_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_1.c **** 
 131:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_1.c ****             #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_1.c ****                 if (0u == (Timer_1_CONTROL & Timer_1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_1.c ****                 {
 135:Generated_Source\PSoC5/Timer_1.c ****                     Timer_1_SetTriggerMode(Timer_1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_1.c ****                 }
 137:Generated_Source\PSoC5/Timer_1.c ****             #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_1.c **** 
 140:Generated_Source\PSoC5/Timer_1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0012 FFF7FEFF 		bl	CyEnterCriticalSection
  54 0016 0346     		mov	r3, r0
  55 0018 FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/Timer_1.c **** 
 144:Generated_Source\PSoC5/Timer_1.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_STATUS_AUX_CTRL |= Timer_1_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001a 0A4A     		ldr	r2, .L2
  58 001c 094B     		ldr	r3, .L2
  59 001e 1B78     		ldrb	r3, [r3]
  60 0020 DBB2     		uxtb	r3, r3
  61 0022 43F01003 		orr	r3, r3, #16
  62 0026 DBB2     		uxtb	r3, r3
  63 0028 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/Timer_1.c **** 
 147:Generated_Source\PSoC5/Timer_1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_1.c ****         CyExitCriticalSection(Timer_1_interruptState);
  64              		.loc 1 148 0
  65 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 002c 1846     		mov	r0, r3
  67 002e FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/Timer_1.c **** 
 150:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_1.c **** 		
 154:Generated_Source\PSoC5/Timer_1.c **** 		
 155:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_InterruptOnCaptureCount && !Timer_1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetInterruptCount(Timer_1_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_1.c **** 
 159:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_ClearFIFO();
  68              		.loc 1 159 0
  69 0032 FFF7FEFF 		bl	Timer_1_ClearFIFO
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 5


 160:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_1.c **** 
 162:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_SetInterruptMode(Timer_1_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 0036 0120     		movs	r0, #1
  72 0038 FFF7FEFF 		bl	Timer_1_SetInterruptMode
 163:Generated_Source\PSoC5/Timer_1.c **** }
  73              		.loc 1 163 0
  74 003c 00BF     		nop
  75 003e 0837     		adds	r7, r7, #8
  76              		.cfi_def_cfa_offset 8
  77 0040 BD46     		mov	sp, r7
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0042 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0044 98650040 		.word	1073767832
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	Timer_1_Init, .-Timer_1_Init
  88              		.section	.text.Timer_1_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	Timer_1_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	Timer_1_Enable, %function
  94              	Timer_1_Enable:
  95              	.LFB1:
 164:Generated_Source\PSoC5/Timer_1.c **** 
 165:Generated_Source\PSoC5/Timer_1.c **** 
 166:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Enable
 168:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_1.c **** *
 170:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_1.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_1.c **** *
 173:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_1.c **** *  void
 175:Generated_Source\PSoC5/Timer_1.c **** *
 176:Generated_Source\PSoC5/Timer_1.c **** * Return:
 177:Generated_Source\PSoC5/Timer_1.c **** *  void
 178:Generated_Source\PSoC5/Timer_1.c **** *
 179:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Enable(void) 
 181:Generated_Source\PSoC5/Timer_1.c **** {
  96              		.loc 1 181 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 6


 105              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/Timer_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE |= Timer_1_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE |= Timer_1_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_1.c **** 
 188:Generated_Source\PSoC5/Timer_1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_ENABLE;
 106              		.loc 1 190 0
 107 0004 054A     		ldr	r2, .L5
 108 0006 054B     		ldr	r3, .L5
 109 0008 1B78     		ldrb	r3, [r3]
 110 000a DBB2     		uxtb	r3, r3
 111 000c 63F07F03 		orn	r3, r3, #127
 112 0010 DBB2     		uxtb	r3, r3
 113 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_1.c **** }
 114              		.loc 1 192 0
 115 0014 00BF     		nop
 116 0016 BD46     		mov	sp, r7
 117              		.cfi_def_cfa_register 13
 118              		@ sp needed
 119 0018 80BC     		pop	{r7}
 120              		.cfi_restore 7
 121              		.cfi_def_cfa_offset 0
 122 001a 7047     		bx	lr
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 001c 78650040 		.word	1073767800
 127              		.cfi_endproc
 128              	.LFE1:
 129              		.size	Timer_1_Enable, .-Timer_1_Enable
 130              		.section	.text.Timer_1_Start,"ax",%progbits
 131              		.align	2
 132              		.global	Timer_1_Start
 133              		.thumb
 134              		.thumb_func
 135              		.type	Timer_1_Start, %function
 136              	Timer_1_Start:
 137              	.LFB2:
 193:Generated_Source\PSoC5/Timer_1.c **** 
 194:Generated_Source\PSoC5/Timer_1.c **** 
 195:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Start
 197:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_1.c **** *
 199:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_1.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_1.c **** *
 204:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_1.c **** *  void
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 7


 206:Generated_Source\PSoC5/Timer_1.c **** *
 207:Generated_Source\PSoC5/Timer_1.c **** * Return:
 208:Generated_Source\PSoC5/Timer_1.c **** *  void
 209:Generated_Source\PSoC5/Timer_1.c **** *
 210:Generated_Source\PSoC5/Timer_1.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_1.c **** *
 214:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Start(void) 
 216:Generated_Source\PSoC5/Timer_1.c **** {
 138              		.loc 1 216 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 148              		.loc 1 217 0
 149 0004 064B     		ldr	r3, .L9
 150 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 151 0008 002B     		cmp	r3, #0
 152 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC5/Timer_1.c ****     {
 219:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_Init();
 153              		.loc 1 219 0
 154 000c FFF7FEFF 		bl	Timer_1_Init
 220:Generated_Source\PSoC5/Timer_1.c **** 
 221:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_initVar = 1u;   /* Clear this bit for Initialization */
 155              		.loc 1 221 0
 156 0010 034B     		ldr	r3, .L9
 157 0012 0122     		movs	r2, #1
 158 0014 1A70     		strb	r2, [r3]
 159              	.L8:
 222:Generated_Source\PSoC5/Timer_1.c ****     }
 223:Generated_Source\PSoC5/Timer_1.c **** 
 224:Generated_Source\PSoC5/Timer_1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_Enable();
 160              		.loc 1 225 0
 161 0016 FFF7FEFF 		bl	Timer_1_Enable
 226:Generated_Source\PSoC5/Timer_1.c **** }
 162              		.loc 1 226 0
 163 001a 00BF     		nop
 164 001c 80BD     		pop	{r7, pc}
 165              	.L10:
 166 001e 00BF     		.align	2
 167              	.L9:
 168 0020 00000000 		.word	Timer_1_initVar
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	Timer_1_Start, .-Timer_1_Start
 172              		.section	.text.Timer_1_Stop,"ax",%progbits
 173              		.align	2
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 8


 174              		.global	Timer_1_Stop
 175              		.thumb
 176              		.thumb_func
 177              		.type	Timer_1_Stop, %function
 178              	Timer_1_Stop:
 179              	.LFB3:
 227:Generated_Source\PSoC5/Timer_1.c **** 
 228:Generated_Source\PSoC5/Timer_1.c **** 
 229:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Stop
 231:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_1.c **** *
 233:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_1.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_1.c **** *
 237:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_1.c **** *  void
 239:Generated_Source\PSoC5/Timer_1.c **** *
 240:Generated_Source\PSoC5/Timer_1.c **** * Return:
 241:Generated_Source\PSoC5/Timer_1.c **** *  void
 242:Generated_Source\PSoC5/Timer_1.c **** *
 243:Generated_Source\PSoC5/Timer_1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_1.c **** *
 246:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Stop(void) 
 248:Generated_Source\PSoC5/Timer_1.c **** {
 180              		.loc 1 248 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/Timer_1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_ENABLE));
 190              		.loc 1 251 0
 191 0004 054A     		ldr	r2, .L12
 192 0006 054B     		ldr	r3, .L12
 193 0008 1B78     		ldrb	r3, [r3]
 194 000a DBB2     		uxtb	r3, r3
 195 000c 03F07F03 		and	r3, r3, #127
 196 0010 DBB2     		uxtb	r3, r3
 197 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_1.c **** 
 254:Generated_Source\PSoC5/Timer_1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE &= ((uint8)(~Timer_1_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_1_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_1.c **** }
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 9


 198              		.loc 1 259 0
 199 0014 00BF     		nop
 200 0016 BD46     		mov	sp, r7
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0018 80BC     		pop	{r7}
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 001a 7047     		bx	lr
 207              	.L13:
 208              		.align	2
 209              	.L12:
 210 001c 78650040 		.word	1073767800
 211              		.cfi_endproc
 212              	.LFE3:
 213              		.size	Timer_1_Stop, .-Timer_1_Stop
 214              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
 215              		.align	2
 216              		.global	Timer_1_SetInterruptMode
 217              		.thumb
 218              		.thumb_func
 219              		.type	Timer_1_SetInterruptMode, %function
 220              	Timer_1_SetInterruptMode:
 221              	.LFB4:
 260:Generated_Source\PSoC5/Timer_1.c **** 
 261:Generated_Source\PSoC5/Timer_1.c **** 
 262:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_1.c **** *
 266:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_1.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_1.c **** *
 271:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_1.c **** *
 275:Generated_Source\PSoC5/Timer_1.c **** * Return:
 276:Generated_Source\PSoC5/Timer_1.c **** *  void
 277:Generated_Source\PSoC5/Timer_1.c **** *
 278:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_1.c **** {
 222              		.loc 1 280 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 10


 234 0006 0346     		mov	r3, r0
 235 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_STATUS_MASK = interruptMode;
 236              		.loc 1 281 0
 237 000a 044A     		ldr	r2, .L15
 238 000c FB79     		ldrb	r3, [r7, #7]
 239 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/Timer_1.c **** }
 240              		.loc 1 282 0
 241 0010 00BF     		nop
 242 0012 0C37     		adds	r7, r7, #12
 243              		.cfi_def_cfa_offset 4
 244 0014 BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 0016 80BC     		pop	{r7}
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 0018 7047     		bx	lr
 251              	.L16:
 252 001a 00BF     		.align	2
 253              	.L15:
 254 001c 88650040 		.word	1073767816
 255              		.cfi_endproc
 256              	.LFE4:
 257              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
 258              		.section	.text.Timer_1_SoftwareCapture,"ax",%progbits
 259              		.align	2
 260              		.global	Timer_1_SoftwareCapture
 261              		.thumb
 262              		.thumb_func
 263              		.type	Timer_1_SoftwareCapture, %function
 264              	Timer_1_SoftwareCapture:
 265              	.LFB5:
 283:Generated_Source\PSoC5/Timer_1.c **** 
 284:Generated_Source\PSoC5/Timer_1.c **** 
 285:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_1.c **** *
 289:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_1.c **** *
 292:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_1.c **** *  void
 294:Generated_Source\PSoC5/Timer_1.c **** *
 295:Generated_Source\PSoC5/Timer_1.c **** * Return:
 296:Generated_Source\PSoC5/Timer_1.c **** *  void
 297:Generated_Source\PSoC5/Timer_1.c **** *
 298:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_1.c **** *
 301:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_1.c **** {
 266              		.loc 1 303 0
 267              		.cfi_startproc
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 11


 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/Timer_1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_1.c ****     #else
 308:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 276              		.loc 1 308 0
 277 0004 024B     		ldr	r3, .L18
 278 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_1.c **** }
 279              		.loc 1 311 0
 280 0008 00BF     		nop
 281 000a BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 000c 80BC     		pop	{r7}
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 000e 7047     		bx	lr
 288              	.L19:
 289              		.align	2
 290              	.L18:
 291 0010 08650040 		.word	1073767688
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	Timer_1_SoftwareCapture, .-Timer_1_SoftwareCapture
 295              		.section	.text.Timer_1_ReadStatusRegister,"ax",%progbits
 296              		.align	2
 297              		.global	Timer_1_ReadStatusRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	Timer_1_ReadStatusRegister, %function
 301              	Timer_1_ReadStatusRegister:
 302              	.LFB6:
 312:Generated_Source\PSoC5/Timer_1.c **** 
 313:Generated_Source\PSoC5/Timer_1.c **** 
 314:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_1.c **** *
 318:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_1.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_1.c **** *
 323:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_1.c **** *  void
 325:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 12


 326:Generated_Source\PSoC5/Timer_1.c **** * Return:
 327:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_1.c **** *
 329:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_1.c **** *
 332:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_1.c **** uint8   Timer_1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_1.c **** {
 303              		.loc 1 334 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/Timer_1.c ****     return (Timer_1_STATUS);
 313              		.loc 1 335 0
 314 0004 034B     		ldr	r3, .L22
 315 0006 1B78     		ldrb	r3, [r3]
 316 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC5/Timer_1.c **** }
 317              		.loc 1 336 0
 318 000a 1846     		mov	r0, r3
 319 000c BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 000e 80BC     		pop	{r7}
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0010 7047     		bx	lr
 326              	.L23:
 327 0012 00BF     		.align	2
 328              	.L22:
 329 0014 68650040 		.word	1073767784
 330              		.cfi_endproc
 331              	.LFE6:
 332              		.size	Timer_1_ReadStatusRegister, .-Timer_1_ReadStatusRegister
 333              		.section	.text.Timer_1_ReadControlRegister,"ax",%progbits
 334              		.align	2
 335              		.global	Timer_1_ReadControlRegister
 336              		.thumb
 337              		.thumb_func
 338              		.type	Timer_1_ReadControlRegister, %function
 339              	Timer_1_ReadControlRegister:
 340              	.LFB7:
 337:Generated_Source\PSoC5/Timer_1.c **** 
 338:Generated_Source\PSoC5/Timer_1.c **** 
 339:Generated_Source\PSoC5/Timer_1.c **** #if (!Timer_1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_1.c **** 
 341:Generated_Source\PSoC5/Timer_1.c **** 
 342:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 13


 345:Generated_Source\PSoC5/Timer_1.c **** *
 346:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_1.c **** *
 349:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_1.c **** *  void
 351:Generated_Source\PSoC5/Timer_1.c **** *
 352:Generated_Source\PSoC5/Timer_1.c **** * Return:
 353:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_1.c **** *
 355:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_1.c **** {
 341              		.loc 1 357 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)Timer_1_CONTROL);
 351              		.loc 1 359 0
 352 0004 034B     		ldr	r3, .L26
 353 0006 1B78     		ldrb	r3, [r3]
 354 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC5/Timer_1.c ****     #else
 361:Generated_Source\PSoC5/Timer_1.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_1.c **** }
 355              		.loc 1 363 0
 356 000a 1846     		mov	r0, r3
 357 000c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 000e 80BC     		pop	{r7}
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0010 7047     		bx	lr
 364              	.L27:
 365 0012 00BF     		.align	2
 366              	.L26:
 367 0014 78650040 		.word	1073767800
 368              		.cfi_endproc
 369              	.LFE7:
 370              		.size	Timer_1_ReadControlRegister, .-Timer_1_ReadControlRegister
 371              		.section	.text.Timer_1_WriteControlRegister,"ax",%progbits
 372              		.align	2
 373              		.global	Timer_1_WriteControlRegister
 374              		.thumb
 375              		.thumb_func
 376              		.type	Timer_1_WriteControlRegister, %function
 377              	Timer_1_WriteControlRegister:
 378              	.LFB8:
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 14


 364:Generated_Source\PSoC5/Timer_1.c **** 
 365:Generated_Source\PSoC5/Timer_1.c **** 
 366:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_1.c **** *
 370:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_1.c **** *
 373:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_1.c **** *
 376:Generated_Source\PSoC5/Timer_1.c **** * Return:
 377:Generated_Source\PSoC5/Timer_1.c **** *
 378:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_1.c **** {
 379              		.loc 1 380 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 83B0     		sub	sp, sp, #12
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 FB71     		strb	r3, [r7, #7]
 381:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL = control;
 393              		.loc 1 382 0
 394 000a 044A     		ldr	r2, .L29
 395 000c FB79     		ldrb	r3, [r7, #7]
 396 000e 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/Timer_1.c ****     #else
 384:Generated_Source\PSoC5/Timer_1.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_1.c **** }
 397              		.loc 1 386 0
 398 0010 00BF     		nop
 399 0012 0C37     		adds	r7, r7, #12
 400              		.cfi_def_cfa_offset 4
 401 0014 BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 0016 80BC     		pop	{r7}
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0018 7047     		bx	lr
 408              	.L30:
 409 001a 00BF     		.align	2
 410              	.L29:
 411 001c 78650040 		.word	1073767800
 412              		.cfi_endproc
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 15


 413              	.LFE8:
 414              		.size	Timer_1_WriteControlRegister, .-Timer_1_WriteControlRegister
 415              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 416              		.align	2
 417              		.global	Timer_1_ReadPeriod
 418              		.thumb
 419              		.thumb_func
 420              		.type	Timer_1_ReadPeriod, %function
 421              	Timer_1_ReadPeriod:
 422              	.LFB9:
 387:Generated_Source\PSoC5/Timer_1.c **** 
 388:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_1.c **** 
 390:Generated_Source\PSoC5/Timer_1.c **** 
 391:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 393:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_1.c **** *
 395:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_1.c **** *
 398:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_1.c **** *  void
 400:Generated_Source\PSoC5/Timer_1.c **** *
 401:Generated_Source\PSoC5/Timer_1.c **** * Return:
 402:Generated_Source\PSoC5/Timer_1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_1.c **** *
 404:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_1.c **** {
 423              		.loc 1 406 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428 0000 80B4     		push	{r7}
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_1.c ****    #else
 410:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_PERIOD_LSB_PTR));
 433              		.loc 1 410 0
 434 0004 034B     		ldr	r3, .L33
 435 0006 1B78     		ldrb	r3, [r3]
 436 0008 DBB2     		uxtb	r3, r3
 411:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_1.c **** }
 437              		.loc 1 412 0
 438 000a 1846     		mov	r0, r3
 439 000c BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 000e 80BC     		pop	{r7}
 443              		.cfi_restore 7
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 16


 444              		.cfi_def_cfa_offset 0
 445 0010 7047     		bx	lr
 446              	.L34:
 447 0012 00BF     		.align	2
 448              	.L33:
 449 0014 28650040 		.word	1073767720
 450              		.cfi_endproc
 451              	.LFE9:
 452              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 453              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 454              		.align	2
 455              		.global	Timer_1_WritePeriod
 456              		.thumb
 457              		.thumb_func
 458              		.type	Timer_1_WritePeriod, %function
 459              	Timer_1_WritePeriod:
 460              	.LFB10:
 413:Generated_Source\PSoC5/Timer_1.c **** 
 414:Generated_Source\PSoC5/Timer_1.c **** 
 415:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 417:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_1.c **** *
 419:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_1.c **** *
 423:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_1.c **** *
 427:Generated_Source\PSoC5/Timer_1.c **** * Return:
 428:Generated_Source\PSoC5/Timer_1.c **** *  void
 429:Generated_Source\PSoC5/Timer_1.c **** *
 430:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WritePeriod(uint8 period) 
 432:Generated_Source\PSoC5/Timer_1.c **** {
 461              		.loc 1 432 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 83B0     		sub	sp, sp, #12
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 0346     		mov	r3, r0
 474 0008 FB71     		strb	r3, [r7, #7]
 433:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_1.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_1.c ****     #else
 437:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_PERIOD_LSB_PTR, period);
 475              		.loc 1 437 0
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 17


 476 000a 044A     		ldr	r2, .L36
 477 000c FB79     		ldrb	r3, [r7, #7]
 478 000e 1370     		strb	r3, [r2]
 438:Generated_Source\PSoC5/Timer_1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_1.c **** }
 479              		.loc 1 439 0
 480 0010 00BF     		nop
 481 0012 0C37     		adds	r7, r7, #12
 482              		.cfi_def_cfa_offset 4
 483 0014 BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 0016 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0018 7047     		bx	lr
 490              	.L37:
 491 001a 00BF     		.align	2
 492              	.L36:
 493 001c 28650040 		.word	1073767720
 494              		.cfi_endproc
 495              	.LFE10:
 496              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 497              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 498              		.align	2
 499              		.global	Timer_1_ReadCapture
 500              		.thumb
 501              		.thumb_func
 502              		.type	Timer_1_ReadCapture, %function
 503              	Timer_1_ReadCapture:
 504              	.LFB11:
 440:Generated_Source\PSoC5/Timer_1.c **** 
 441:Generated_Source\PSoC5/Timer_1.c **** 
 442:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCapture
 444:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_1.c **** *
 446:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_1.c **** *
 449:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_1.c **** *  void
 451:Generated_Source\PSoC5/Timer_1.c **** *
 452:Generated_Source\PSoC5/Timer_1.c **** * Return:
 453:Generated_Source\PSoC5/Timer_1.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_1.c **** *
 455:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_1.c **** {
 505              		.loc 1 457 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 18


 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_1.c ****    #else
 461:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 515              		.loc 1 461 0
 516 0004 034B     		ldr	r3, .L40
 517 0006 1B78     		ldrb	r3, [r3]
 518 0008 DBB2     		uxtb	r3, r3
 462:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_1.c **** }
 519              		.loc 1 463 0
 520 000a 1846     		mov	r0, r3
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L41:
 529 0012 00BF     		.align	2
 530              	.L40:
 531 0014 48650040 		.word	1073767752
 532              		.cfi_endproc
 533              	.LFE11:
 534              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 535              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 536              		.align	2
 537              		.global	Timer_1_WriteCounter
 538              		.thumb
 539              		.thumb_func
 540              		.type	Timer_1_WriteCounter, %function
 541              	Timer_1_WriteCounter:
 542              	.LFB12:
 464:Generated_Source\PSoC5/Timer_1.c **** 
 465:Generated_Source\PSoC5/Timer_1.c **** 
 466:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 468:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_1.c **** *
 470:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_1.c **** *
 473:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_1.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_1.c **** *
 476:Generated_Source\PSoC5/Timer_1.c **** * Return:
 477:Generated_Source\PSoC5/Timer_1.c **** *  void
 478:Generated_Source\PSoC5/Timer_1.c **** *
 479:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteCounter(uint8 counter) 
 481:Generated_Source\PSoC5/Timer_1.c **** {
 543              		.loc 1 481 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 19


 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 0346     		mov	r3, r0
 556 0008 FB71     		strb	r3, [r7, #7]
 482:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_1.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_1.c ****          */
 486:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_1.c ****         
 488:Generated_Source\PSoC5/Timer_1.c ****     #else
 489:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_COUNTER_LSB_PTR, counter);
 557              		.loc 1 489 0
 558 000a 044A     		ldr	r2, .L43
 559 000c FB79     		ldrb	r3, [r7, #7]
 560 000e 1370     		strb	r3, [r2]
 490:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_1.c **** }
 561              		.loc 1 491 0
 562 0010 00BF     		nop
 563 0012 0C37     		adds	r7, r7, #12
 564              		.cfi_def_cfa_offset 4
 565 0014 BD46     		mov	sp, r7
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 0016 80BC     		pop	{r7}
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0018 7047     		bx	lr
 572              	.L44:
 573 001a 00BF     		.align	2
 574              	.L43:
 575 001c 08650040 		.word	1073767688
 576              		.cfi_endproc
 577              	.LFE12:
 578              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 579              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 580              		.align	2
 581              		.global	Timer_1_ReadCounter
 582              		.thumb
 583              		.thumb_func
 584              		.type	Timer_1_ReadCounter, %function
 585              	Timer_1_ReadCounter:
 586              	.LFB13:
 492:Generated_Source\PSoC5/Timer_1.c **** 
 493:Generated_Source\PSoC5/Timer_1.c **** 
 494:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 496:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 20


 498:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_1.c **** *
 501:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_1.c **** *  void
 503:Generated_Source\PSoC5/Timer_1.c **** *
 504:Generated_Source\PSoC5/Timer_1.c **** * Return:
 505:Generated_Source\PSoC5/Timer_1.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_1.c **** *
 507:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_1.c **** {
 587              		.loc 1 509 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/Timer_1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_1.c ****     #else
 516:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 597              		.loc 1 516 0
 598 0004 044B     		ldr	r3, .L47
 599 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_1.c **** 
 519:Generated_Source\PSoC5/Timer_1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_1.c ****     #else
 523:Generated_Source\PSoC5/Timer_1.c ****         return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 600              		.loc 1 523 0
 601 0008 044B     		ldr	r3, .L47+4
 602 000a 1B78     		ldrb	r3, [r3]
 603 000c DBB2     		uxtb	r3, r3
 524:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (Timer_1_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_1.c **** }
 604              		.loc 1 525 0
 605 000e 1846     		mov	r0, r3
 606 0010 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 0012 80BC     		pop	{r7}
 610              		.cfi_restore 7
 611              		.cfi_def_cfa_offset 0
 612 0014 7047     		bx	lr
 613              	.L48:
 614 0016 00BF     		.align	2
 615              	.L47:
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 21


 616 0018 08650040 		.word	1073767688
 617 001c 48650040 		.word	1073767752
 618              		.cfi_endproc
 619              	.LFE13:
 620              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 621              		.section	.text.Timer_1_ClearFIFO,"ax",%progbits
 622              		.align	2
 623              		.global	Timer_1_ClearFIFO
 624              		.thumb
 625              		.thumb_func
 626              		.type	Timer_1_ClearFIFO, %function
 627              	Timer_1_ClearFIFO:
 628              	.LFB14:
 526:Generated_Source\PSoC5/Timer_1.c **** 
 527:Generated_Source\PSoC5/Timer_1.c **** 
 528:Generated_Source\PSoC5/Timer_1.c **** #if(!Timer_1_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_1.c **** 
 530:Generated_Source\PSoC5/Timer_1.c ****     
 531:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_1.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_1.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_1.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_1.c **** 
 536:Generated_Source\PSoC5/Timer_1.c **** 
 537:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_1.c **** 
 539:Generated_Source\PSoC5/Timer_1.c **** 
 540:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_1.c **** *
 544:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_1.c **** *
 547:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_1.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_1.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_1.c **** *  #define Timer_1__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_1.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_1.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_1.c **** *
 562:Generated_Source\PSoC5/Timer_1.c **** * Return:
 563:Generated_Source\PSoC5/Timer_1.c **** *  void
 564:Generated_Source\PSoC5/Timer_1.c **** *
 565:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_1.c **** {
 568:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_1.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_1_CTRL_CAP_MODE_SHIFT));
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 22


 570:Generated_Source\PSoC5/Timer_1.c ****     captureMode &= (Timer_1_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_1.c **** 
 572:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_1.c **** 
 576:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_1.c **** }
 580:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_1.c **** 
 582:Generated_Source\PSoC5/Timer_1.c **** 
 583:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_1.c **** 
 585:Generated_Source\PSoC5/Timer_1.c **** 
 586:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_1.c **** *
 590:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_1.c **** *
 593:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_1.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_1.c **** *
 601:Generated_Source\PSoC5/Timer_1.c **** * Return:
 602:Generated_Source\PSoC5/Timer_1.c **** *  void
 603:Generated_Source\PSoC5/Timer_1.c **** *
 604:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_1.c **** {
 607:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_1.c ****     triggerMode &= Timer_1_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_1.c **** 
 610:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/Timer_1.c ****     
 612:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_1.c **** 
 615:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= (triggerMode | Timer_1__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_1.c **** }
 619:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_1.c **** 
 621:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_1.c **** 
 623:Generated_Source\PSoC5/Timer_1.c **** 
 624:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_EnableTrigger
 626:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 23


 627:Generated_Source\PSoC5/Timer_1.c **** *
 628:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_1.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_1.c **** *
 631:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_1.c **** *  void
 633:Generated_Source\PSoC5/Timer_1.c **** *
 634:Generated_Source\PSoC5/Timer_1.c **** * Return:
 635:Generated_Source\PSoC5/Timer_1.c **** *  void
 636:Generated_Source\PSoC5/Timer_1.c **** *
 637:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_1.c **** {
 640:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_1.c **** }
 644:Generated_Source\PSoC5/Timer_1.c **** 
 645:Generated_Source\PSoC5/Timer_1.c **** 
 646:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_DisableTrigger
 648:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_1.c **** *
 650:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_1.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_1.c **** *
 653:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_1.c **** *  void
 655:Generated_Source\PSoC5/Timer_1.c **** *
 656:Generated_Source\PSoC5/Timer_1.c **** * Return:
 657:Generated_Source\PSoC5/Timer_1.c **** *  void
 658:Generated_Source\PSoC5/Timer_1.c **** *
 659:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_1.c **** {
 662:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed *
 663:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_1.c **** }
 666:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_1.c **** 
 668:Generated_Source\PSoC5/Timer_1.c **** #if(Timer_1_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_1.c **** 
 670:Generated_Source\PSoC5/Timer_1.c **** 
 671:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_1.c **** *
 675:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_1.c **** *
 678:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_1.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_1.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_1.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_1.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 24


 684:Generated_Source\PSoC5/Timer_1.c **** * Return:
 685:Generated_Source\PSoC5/Timer_1.c **** *  void
 686:Generated_Source\PSoC5/Timer_1.c **** *
 687:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_1.c **** {
 690:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_1.c ****     interruptCount &= Timer_1_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer_1.c **** 
 693:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_1.c **** }
 700:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_1.c **** 
 702:Generated_Source\PSoC5/Timer_1.c **** 
 703:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_1.c **** 
 705:Generated_Source\PSoC5/Timer_1.c **** 
 706:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_1.c **** *
 710:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_1.c **** *
 713:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_1.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_1.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_1.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_1.c **** *
 718:Generated_Source\PSoC5/Timer_1.c **** * Return:
 719:Generated_Source\PSoC5/Timer_1.c **** *  void
 720:Generated_Source\PSoC5/Timer_1.c **** *
 721:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_1.c **** {
 724:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_1.c **** }
 726:Generated_Source\PSoC5/Timer_1.c **** 
 727:Generated_Source\PSoC5/Timer_1.c **** 
 728:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_1.c **** *
 732:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_1.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_1.c **** *
 735:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_1.c **** *  void
 737:Generated_Source\PSoC5/Timer_1.c **** *
 738:Generated_Source\PSoC5/Timer_1.c **** * Return:
 739:Generated_Source\PSoC5/Timer_1.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 25


 741:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_1.c **** {
 744:Generated_Source\PSoC5/Timer_1.c ****     return ((uint8)Timer_1_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_1.c **** }
 746:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_1.c **** 
 748:Generated_Source\PSoC5/Timer_1.c **** 
 749:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ClearFIFO
 751:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_1.c **** *
 753:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_1.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_1.c **** *
 756:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_1.c **** *  void
 758:Generated_Source\PSoC5/Timer_1.c **** *
 759:Generated_Source\PSoC5/Timer_1.c **** * Return:
 760:Generated_Source\PSoC5/Timer_1.c **** *  void
 761:Generated_Source\PSoC5/Timer_1.c **** *
 762:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_1.c **** {
 629              		.loc 1 764 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 639              		.loc 1 765 0
 640 0004 01E0     		b	.L50
 641              	.L51:
 766:Generated_Source\PSoC5/Timer_1.c ****     {
 767:Generated_Source\PSoC5/Timer_1.c ****         (void)Timer_1_ReadCapture();
 642              		.loc 1 767 0
 643 0006 FFF7FEFF 		bl	Timer_1_ReadCapture
 644              	.L50:
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 645              		.loc 1 765 0
 646 000a FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 647 000e 0346     		mov	r3, r0
 648 0010 03F00803 		and	r3, r3, #8
 649 0014 002B     		cmp	r3, #0
 650 0016 F6D1     		bne	.L51
 768:Generated_Source\PSoC5/Timer_1.c ****     }
 769:Generated_Source\PSoC5/Timer_1.c **** }
 651              		.loc 1 769 0
 652 0018 00BF     		nop
 653 001a 80BD     		pop	{r7, pc}
 654              		.cfi_endproc
 655              	.LFE14:
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 26


 656              		.size	Timer_1_ClearFIFO, .-Timer_1_ClearFIFO
 657              		.text
 658              	.Letext0:
 659              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 660              		.section	.debug_info,"",%progbits
 661              	.Ldebug_info0:
 662 0000 3A020000 		.4byte	0x23a
 663 0004 0400     		.2byte	0x4
 664 0006 00000000 		.4byte	.Ldebug_abbrev0
 665 000a 04       		.byte	0x4
 666 000b 01       		.uleb128 0x1
 667 000c 41000000 		.4byte	.LASF35
 668 0010 0C       		.byte	0xc
 669 0011 15010000 		.4byte	.LASF36
 670 0015 00000000 		.4byte	.LASF37
 671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 672 001d 00000000 		.4byte	0
 673 0021 00000000 		.4byte	.Ldebug_line0
 674 0025 02       		.uleb128 0x2
 675 0026 01       		.byte	0x1
 676 0027 06       		.byte	0x6
 677 0028 0B030000 		.4byte	.LASF0
 678 002c 02       		.uleb128 0x2
 679 002d 01       		.byte	0x1
 680 002e 08       		.byte	0x8
 681 002f 51010000 		.4byte	.LASF1
 682 0033 02       		.uleb128 0x2
 683 0034 02       		.byte	0x2
 684 0035 05       		.byte	0x5
 685 0036 CC020000 		.4byte	.LASF2
 686 003a 02       		.uleb128 0x2
 687 003b 02       		.byte	0x2
 688 003c 07       		.byte	0x7
 689 003d 02010000 		.4byte	.LASF3
 690 0041 02       		.uleb128 0x2
 691 0042 04       		.byte	0x4
 692 0043 05       		.byte	0x5
 693 0044 F1020000 		.4byte	.LASF4
 694 0048 02       		.uleb128 0x2
 695 0049 04       		.byte	0x4
 696 004a 07       		.byte	0x7
 697 004b 77010000 		.4byte	.LASF5
 698 004f 02       		.uleb128 0x2
 699 0050 08       		.byte	0x8
 700 0051 05       		.byte	0x5
 701 0052 8A020000 		.4byte	.LASF6
 702 0056 02       		.uleb128 0x2
 703 0057 08       		.byte	0x8
 704 0058 07       		.byte	0x7
 705 0059 2A020000 		.4byte	.LASF7
 706 005d 03       		.uleb128 0x3
 707 005e 04       		.byte	0x4
 708 005f 05       		.byte	0x5
 709 0060 696E7400 		.ascii	"int\000"
 710 0064 02       		.uleb128 0x2
 711 0065 04       		.byte	0x4
 712 0066 07       		.byte	0x7
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 27


 713 0067 36010000 		.4byte	.LASF8
 714 006b 04       		.uleb128 0x4
 715 006c 89010000 		.4byte	.LASF12
 716 0070 02       		.byte	0x2
 717 0071 E801     		.2byte	0x1e8
 718 0073 2C000000 		.4byte	0x2c
 719 0077 02       		.uleb128 0x2
 720 0078 04       		.byte	0x4
 721 0079 04       		.byte	0x4
 722 007a 43010000 		.4byte	.LASF9
 723 007e 02       		.uleb128 0x2
 724 007f 08       		.byte	0x8
 725 0080 04       		.byte	0x4
 726 0081 A6010000 		.4byte	.LASF10
 727 0085 02       		.uleb128 0x2
 728 0086 01       		.byte	0x1
 729 0087 08       		.byte	0x8
 730 0088 FA020000 		.4byte	.LASF11
 731 008c 04       		.uleb128 0x4
 732 008d 5F010000 		.4byte	.LASF13
 733 0091 02       		.byte	0x2
 734 0092 9202     		.2byte	0x292
 735 0094 98000000 		.4byte	0x98
 736 0098 05       		.uleb128 0x5
 737 0099 6B000000 		.4byte	0x6b
 738 009d 02       		.uleb128 0x2
 739 009e 08       		.byte	0x8
 740 009f 04       		.byte	0x4
 741 00a0 FF020000 		.4byte	.LASF14
 742 00a4 02       		.uleb128 0x2
 743 00a5 04       		.byte	0x4
 744 00a6 07       		.byte	0x7
 745 00a7 81020000 		.4byte	.LASF15
 746 00ab 06       		.uleb128 0x6
 747 00ac 1D020000 		.4byte	.LASF19
 748 00b0 01       		.byte	0x1
 749 00b1 2B       		.byte	0x2b
 750 00b2 00000000 		.4byte	.LFB0
 751 00b6 48000000 		.4byte	.LFE0-.LFB0
 752 00ba 01       		.uleb128 0x1
 753 00bb 9C       		.byte	0x9c
 754 00bc CF000000 		.4byte	0xcf
 755 00c0 07       		.uleb128 0x7
 756 00c1 6A020000 		.4byte	.LASF38
 757 00c5 01       		.byte	0x1
 758 00c6 2F       		.byte	0x2f
 759 00c7 6B000000 		.4byte	0x6b
 760 00cb 02       		.uleb128 0x2
 761 00cc 91       		.byte	0x91
 762 00cd 77       		.sleb128 -9
 763 00ce 00       		.byte	0
 764 00cf 08       		.uleb128 0x8
 765 00d0 97010000 		.4byte	.LASF16
 766 00d4 01       		.byte	0x1
 767 00d5 B4       		.byte	0xb4
 768 00d6 00000000 		.4byte	.LFB1
 769 00da 20000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 28


 770 00de 01       		.uleb128 0x1
 771 00df 9C       		.byte	0x9c
 772 00e0 09       		.uleb128 0x9
 773 00e1 0F020000 		.4byte	.LASF17
 774 00e5 01       		.byte	0x1
 775 00e6 D7       		.byte	0xd7
 776 00e7 00000000 		.4byte	.LFB2
 777 00eb 24000000 		.4byte	.LFE2-.LFB2
 778 00ef 01       		.uleb128 0x1
 779 00f0 9C       		.byte	0x9c
 780 00f1 08       		.uleb128 0x8
 781 00f2 17030000 		.4byte	.LASF18
 782 00f6 01       		.byte	0x1
 783 00f7 F7       		.byte	0xf7
 784 00f8 00000000 		.4byte	.LFB3
 785 00fc 20000000 		.4byte	.LFE3-.LFB3
 786 0100 01       		.uleb128 0x1
 787 0101 9C       		.byte	0x9c
 788 0102 0A       		.uleb128 0xa
 789 0103 AD010000 		.4byte	.LASF20
 790 0107 01       		.byte	0x1
 791 0108 1701     		.2byte	0x117
 792 010a 00000000 		.4byte	.LFB4
 793 010e 20000000 		.4byte	.LFE4-.LFB4
 794 0112 01       		.uleb128 0x1
 795 0113 9C       		.byte	0x9c
 796 0114 28010000 		.4byte	0x128
 797 0118 0B       		.uleb128 0xb
 798 0119 98020000 		.4byte	.LASF25
 799 011d 01       		.byte	0x1
 800 011e 1701     		.2byte	0x117
 801 0120 6B000000 		.4byte	0x6b
 802 0124 02       		.uleb128 0x2
 803 0125 91       		.byte	0x91
 804 0126 77       		.sleb128 -9
 805 0127 00       		.byte	0
 806 0128 0C       		.uleb128 0xc
 807 0129 CF000000 		.4byte	.LASF21
 808 012d 01       		.byte	0x1
 809 012e 2E01     		.2byte	0x12e
 810 0130 00000000 		.4byte	.LFB5
 811 0134 14000000 		.4byte	.LFE5-.LFB5
 812 0138 01       		.uleb128 0x1
 813 0139 9C       		.byte	0x9c
 814 013a 0D       		.uleb128 0xd
 815 013b D6020000 		.4byte	.LASF22
 816 013f 01       		.byte	0x1
 817 0140 4D01     		.2byte	0x14d
 818 0142 6B000000 		.4byte	0x6b
 819 0146 00000000 		.4byte	.LFB6
 820 014a 18000000 		.4byte	.LFE6-.LFB6
 821 014e 01       		.uleb128 0x1
 822 014f 9C       		.byte	0x9c
 823 0150 0D       		.uleb128 0xd
 824 0151 F3010000 		.4byte	.LASF23
 825 0155 01       		.byte	0x1
 826 0156 6401     		.2byte	0x164
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 29


 827 0158 6B000000 		.4byte	0x6b
 828 015c 00000000 		.4byte	.LFB7
 829 0160 18000000 		.4byte	.LFE7-.LFB7
 830 0164 01       		.uleb128 0x1
 831 0165 9C       		.byte	0x9c
 832 0166 0A       		.uleb128 0xa
 833 0167 D6010000 		.4byte	.LASF24
 834 016b 01       		.byte	0x1
 835 016c 7B01     		.2byte	0x17b
 836 016e 00000000 		.4byte	.LFB8
 837 0172 20000000 		.4byte	.LFE8-.LFB8
 838 0176 01       		.uleb128 0x1
 839 0177 9C       		.byte	0x9c
 840 0178 8C010000 		.4byte	0x18c
 841 017c 0B       		.uleb128 0xb
 842 017d 8F010000 		.4byte	.LASF26
 843 0181 01       		.byte	0x1
 844 0182 7B01     		.2byte	0x17b
 845 0184 6B000000 		.4byte	0x6b
 846 0188 02       		.uleb128 0x2
 847 0189 91       		.byte	0x91
 848 018a 77       		.sleb128 -9
 849 018b 00       		.byte	0
 850 018c 0D       		.uleb128 0xd
 851 018d 64010000 		.4byte	.LASF27
 852 0191 01       		.byte	0x1
 853 0192 9501     		.2byte	0x195
 854 0194 6B000000 		.4byte	0x6b
 855 0198 00000000 		.4byte	.LFB9
 856 019c 18000000 		.4byte	.LFE9-.LFB9
 857 01a0 01       		.uleb128 0x1
 858 01a1 9C       		.byte	0x9c
 859 01a2 0A       		.uleb128 0xa
 860 01a3 E7000000 		.4byte	.LASF28
 861 01a7 01       		.byte	0x1
 862 01a8 AF01     		.2byte	0x1af
 863 01aa 00000000 		.4byte	.LFB10
 864 01ae 20000000 		.4byte	.LFE10-.LFB10
 865 01b2 01       		.uleb128 0x1
 866 01b3 9C       		.byte	0x9c
 867 01b4 C8010000 		.4byte	0x1c8
 868 01b8 0B       		.uleb128 0xb
 869 01b9 FB000000 		.4byte	.LASF29
 870 01bd 01       		.byte	0x1
 871 01be AF01     		.2byte	0x1af
 872 01c0 6B000000 		.4byte	0x6b
 873 01c4 02       		.uleb128 0x2
 874 01c5 91       		.byte	0x91
 875 01c6 77       		.sleb128 -9
 876 01c7 00       		.byte	0
 877 01c8 0D       		.uleb128 0xd
 878 01c9 56020000 		.4byte	.LASF30
 879 01cd 01       		.byte	0x1
 880 01ce C801     		.2byte	0x1c8
 881 01d0 6B000000 		.4byte	0x6b
 882 01d4 00000000 		.4byte	.LFB11
 883 01d8 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 30


 884 01dc 01       		.uleb128 0x1
 885 01dd 9C       		.byte	0x9c
 886 01de 0A       		.uleb128 0xa
 887 01df 41020000 		.4byte	.LASF31
 888 01e3 01       		.byte	0x1
 889 01e4 E001     		.2byte	0x1e0
 890 01e6 00000000 		.4byte	.LFB12
 891 01ea 20000000 		.4byte	.LFE12-.LFB12
 892 01ee 01       		.uleb128 0x1
 893 01ef 9C       		.byte	0x9c
 894 01f0 04020000 		.4byte	0x204
 895 01f4 0B       		.uleb128 0xb
 896 01f5 49010000 		.4byte	.LASF32
 897 01f9 01       		.byte	0x1
 898 01fa E001     		.2byte	0x1e0
 899 01fc 6B000000 		.4byte	0x6b
 900 0200 02       		.uleb128 0x2
 901 0201 91       		.byte	0x91
 902 0202 77       		.sleb128 -9
 903 0203 00       		.byte	0
 904 0204 0D       		.uleb128 0xd
 905 0205 A6020000 		.4byte	.LASF33
 906 0209 01       		.byte	0x1
 907 020a FC01     		.2byte	0x1fc
 908 020c 6B000000 		.4byte	0x6b
 909 0210 00000000 		.4byte	.LFB13
 910 0214 20000000 		.4byte	.LFE13-.LFB13
 911 0218 01       		.uleb128 0x1
 912 0219 9C       		.byte	0x9c
 913 021a 0E       		.uleb128 0xe
 914 021b BA020000 		.4byte	.LASF34
 915 021f 01       		.byte	0x1
 916 0220 FB02     		.2byte	0x2fb
 917 0222 00000000 		.4byte	.LFB14
 918 0226 1C000000 		.4byte	.LFE14-.LFB14
 919 022a 01       		.uleb128 0x1
 920 022b 9C       		.byte	0x9c
 921 022c 0F       		.uleb128 0xf
 922 022d C6010000 		.4byte	.LASF39
 923 0231 01       		.byte	0x1
 924 0232 1A       		.byte	0x1a
 925 0233 6B000000 		.4byte	0x6b
 926 0237 05       		.uleb128 0x5
 927 0238 03       		.byte	0x3
 928 0239 00000000 		.4byte	Timer_1_initVar
 929 023d 00       		.byte	0
 930              		.section	.debug_abbrev,"",%progbits
 931              	.Ldebug_abbrev0:
 932 0000 01       		.uleb128 0x1
 933 0001 11       		.uleb128 0x11
 934 0002 01       		.byte	0x1
 935 0003 25       		.uleb128 0x25
 936 0004 0E       		.uleb128 0xe
 937 0005 13       		.uleb128 0x13
 938 0006 0B       		.uleb128 0xb
 939 0007 03       		.uleb128 0x3
 940 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 31


 941 0009 1B       		.uleb128 0x1b
 942 000a 0E       		.uleb128 0xe
 943 000b 55       		.uleb128 0x55
 944 000c 17       		.uleb128 0x17
 945 000d 11       		.uleb128 0x11
 946 000e 01       		.uleb128 0x1
 947 000f 10       		.uleb128 0x10
 948 0010 17       		.uleb128 0x17
 949 0011 00       		.byte	0
 950 0012 00       		.byte	0
 951 0013 02       		.uleb128 0x2
 952 0014 24       		.uleb128 0x24
 953 0015 00       		.byte	0
 954 0016 0B       		.uleb128 0xb
 955 0017 0B       		.uleb128 0xb
 956 0018 3E       		.uleb128 0x3e
 957 0019 0B       		.uleb128 0xb
 958 001a 03       		.uleb128 0x3
 959 001b 0E       		.uleb128 0xe
 960 001c 00       		.byte	0
 961 001d 00       		.byte	0
 962 001e 03       		.uleb128 0x3
 963 001f 24       		.uleb128 0x24
 964 0020 00       		.byte	0
 965 0021 0B       		.uleb128 0xb
 966 0022 0B       		.uleb128 0xb
 967 0023 3E       		.uleb128 0x3e
 968 0024 0B       		.uleb128 0xb
 969 0025 03       		.uleb128 0x3
 970 0026 08       		.uleb128 0x8
 971 0027 00       		.byte	0
 972 0028 00       		.byte	0
 973 0029 04       		.uleb128 0x4
 974 002a 16       		.uleb128 0x16
 975 002b 00       		.byte	0
 976 002c 03       		.uleb128 0x3
 977 002d 0E       		.uleb128 0xe
 978 002e 3A       		.uleb128 0x3a
 979 002f 0B       		.uleb128 0xb
 980 0030 3B       		.uleb128 0x3b
 981 0031 05       		.uleb128 0x5
 982 0032 49       		.uleb128 0x49
 983 0033 13       		.uleb128 0x13
 984 0034 00       		.byte	0
 985 0035 00       		.byte	0
 986 0036 05       		.uleb128 0x5
 987 0037 35       		.uleb128 0x35
 988 0038 00       		.byte	0
 989 0039 49       		.uleb128 0x49
 990 003a 13       		.uleb128 0x13
 991 003b 00       		.byte	0
 992 003c 00       		.byte	0
 993 003d 06       		.uleb128 0x6
 994 003e 2E       		.uleb128 0x2e
 995 003f 01       		.byte	0x1
 996 0040 3F       		.uleb128 0x3f
 997 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 32


 998 0042 03       		.uleb128 0x3
 999 0043 0E       		.uleb128 0xe
 1000 0044 3A       		.uleb128 0x3a
 1001 0045 0B       		.uleb128 0xb
 1002 0046 3B       		.uleb128 0x3b
 1003 0047 0B       		.uleb128 0xb
 1004 0048 27       		.uleb128 0x27
 1005 0049 19       		.uleb128 0x19
 1006 004a 11       		.uleb128 0x11
 1007 004b 01       		.uleb128 0x1
 1008 004c 12       		.uleb128 0x12
 1009 004d 06       		.uleb128 0x6
 1010 004e 40       		.uleb128 0x40
 1011 004f 18       		.uleb128 0x18
 1012 0050 9642     		.uleb128 0x2116
 1013 0052 19       		.uleb128 0x19
 1014 0053 01       		.uleb128 0x1
 1015 0054 13       		.uleb128 0x13
 1016 0055 00       		.byte	0
 1017 0056 00       		.byte	0
 1018 0057 07       		.uleb128 0x7
 1019 0058 34       		.uleb128 0x34
 1020 0059 00       		.byte	0
 1021 005a 03       		.uleb128 0x3
 1022 005b 0E       		.uleb128 0xe
 1023 005c 3A       		.uleb128 0x3a
 1024 005d 0B       		.uleb128 0xb
 1025 005e 3B       		.uleb128 0x3b
 1026 005f 0B       		.uleb128 0xb
 1027 0060 49       		.uleb128 0x49
 1028 0061 13       		.uleb128 0x13
 1029 0062 02       		.uleb128 0x2
 1030 0063 18       		.uleb128 0x18
 1031 0064 00       		.byte	0
 1032 0065 00       		.byte	0
 1033 0066 08       		.uleb128 0x8
 1034 0067 2E       		.uleb128 0x2e
 1035 0068 00       		.byte	0
 1036 0069 3F       		.uleb128 0x3f
 1037 006a 19       		.uleb128 0x19
 1038 006b 03       		.uleb128 0x3
 1039 006c 0E       		.uleb128 0xe
 1040 006d 3A       		.uleb128 0x3a
 1041 006e 0B       		.uleb128 0xb
 1042 006f 3B       		.uleb128 0x3b
 1043 0070 0B       		.uleb128 0xb
 1044 0071 27       		.uleb128 0x27
 1045 0072 19       		.uleb128 0x19
 1046 0073 11       		.uleb128 0x11
 1047 0074 01       		.uleb128 0x1
 1048 0075 12       		.uleb128 0x12
 1049 0076 06       		.uleb128 0x6
 1050 0077 40       		.uleb128 0x40
 1051 0078 18       		.uleb128 0x18
 1052 0079 9742     		.uleb128 0x2117
 1053 007b 19       		.uleb128 0x19
 1054 007c 00       		.byte	0
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 33


 1055 007d 00       		.byte	0
 1056 007e 09       		.uleb128 0x9
 1057 007f 2E       		.uleb128 0x2e
 1058 0080 00       		.byte	0
 1059 0081 3F       		.uleb128 0x3f
 1060 0082 19       		.uleb128 0x19
 1061 0083 03       		.uleb128 0x3
 1062 0084 0E       		.uleb128 0xe
 1063 0085 3A       		.uleb128 0x3a
 1064 0086 0B       		.uleb128 0xb
 1065 0087 3B       		.uleb128 0x3b
 1066 0088 0B       		.uleb128 0xb
 1067 0089 27       		.uleb128 0x27
 1068 008a 19       		.uleb128 0x19
 1069 008b 11       		.uleb128 0x11
 1070 008c 01       		.uleb128 0x1
 1071 008d 12       		.uleb128 0x12
 1072 008e 06       		.uleb128 0x6
 1073 008f 40       		.uleb128 0x40
 1074 0090 18       		.uleb128 0x18
 1075 0091 9642     		.uleb128 0x2116
 1076 0093 19       		.uleb128 0x19
 1077 0094 00       		.byte	0
 1078 0095 00       		.byte	0
 1079 0096 0A       		.uleb128 0xa
 1080 0097 2E       		.uleb128 0x2e
 1081 0098 01       		.byte	0x1
 1082 0099 3F       		.uleb128 0x3f
 1083 009a 19       		.uleb128 0x19
 1084 009b 03       		.uleb128 0x3
 1085 009c 0E       		.uleb128 0xe
 1086 009d 3A       		.uleb128 0x3a
 1087 009e 0B       		.uleb128 0xb
 1088 009f 3B       		.uleb128 0x3b
 1089 00a0 05       		.uleb128 0x5
 1090 00a1 27       		.uleb128 0x27
 1091 00a2 19       		.uleb128 0x19
 1092 00a3 11       		.uleb128 0x11
 1093 00a4 01       		.uleb128 0x1
 1094 00a5 12       		.uleb128 0x12
 1095 00a6 06       		.uleb128 0x6
 1096 00a7 40       		.uleb128 0x40
 1097 00a8 18       		.uleb128 0x18
 1098 00a9 9742     		.uleb128 0x2117
 1099 00ab 19       		.uleb128 0x19
 1100 00ac 01       		.uleb128 0x1
 1101 00ad 13       		.uleb128 0x13
 1102 00ae 00       		.byte	0
 1103 00af 00       		.byte	0
 1104 00b0 0B       		.uleb128 0xb
 1105 00b1 05       		.uleb128 0x5
 1106 00b2 00       		.byte	0
 1107 00b3 03       		.uleb128 0x3
 1108 00b4 0E       		.uleb128 0xe
 1109 00b5 3A       		.uleb128 0x3a
 1110 00b6 0B       		.uleb128 0xb
 1111 00b7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 34


 1112 00b8 05       		.uleb128 0x5
 1113 00b9 49       		.uleb128 0x49
 1114 00ba 13       		.uleb128 0x13
 1115 00bb 02       		.uleb128 0x2
 1116 00bc 18       		.uleb128 0x18
 1117 00bd 00       		.byte	0
 1118 00be 00       		.byte	0
 1119 00bf 0C       		.uleb128 0xc
 1120 00c0 2E       		.uleb128 0x2e
 1121 00c1 00       		.byte	0
 1122 00c2 3F       		.uleb128 0x3f
 1123 00c3 19       		.uleb128 0x19
 1124 00c4 03       		.uleb128 0x3
 1125 00c5 0E       		.uleb128 0xe
 1126 00c6 3A       		.uleb128 0x3a
 1127 00c7 0B       		.uleb128 0xb
 1128 00c8 3B       		.uleb128 0x3b
 1129 00c9 05       		.uleb128 0x5
 1130 00ca 27       		.uleb128 0x27
 1131 00cb 19       		.uleb128 0x19
 1132 00cc 11       		.uleb128 0x11
 1133 00cd 01       		.uleb128 0x1
 1134 00ce 12       		.uleb128 0x12
 1135 00cf 06       		.uleb128 0x6
 1136 00d0 40       		.uleb128 0x40
 1137 00d1 18       		.uleb128 0x18
 1138 00d2 9742     		.uleb128 0x2117
 1139 00d4 19       		.uleb128 0x19
 1140 00d5 00       		.byte	0
 1141 00d6 00       		.byte	0
 1142 00d7 0D       		.uleb128 0xd
 1143 00d8 2E       		.uleb128 0x2e
 1144 00d9 00       		.byte	0
 1145 00da 3F       		.uleb128 0x3f
 1146 00db 19       		.uleb128 0x19
 1147 00dc 03       		.uleb128 0x3
 1148 00dd 0E       		.uleb128 0xe
 1149 00de 3A       		.uleb128 0x3a
 1150 00df 0B       		.uleb128 0xb
 1151 00e0 3B       		.uleb128 0x3b
 1152 00e1 05       		.uleb128 0x5
 1153 00e2 27       		.uleb128 0x27
 1154 00e3 19       		.uleb128 0x19
 1155 00e4 49       		.uleb128 0x49
 1156 00e5 13       		.uleb128 0x13
 1157 00e6 11       		.uleb128 0x11
 1158 00e7 01       		.uleb128 0x1
 1159 00e8 12       		.uleb128 0x12
 1160 00e9 06       		.uleb128 0x6
 1161 00ea 40       		.uleb128 0x40
 1162 00eb 18       		.uleb128 0x18
 1163 00ec 9742     		.uleb128 0x2117
 1164 00ee 19       		.uleb128 0x19
 1165 00ef 00       		.byte	0
 1166 00f0 00       		.byte	0
 1167 00f1 0E       		.uleb128 0xe
 1168 00f2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 35


 1169 00f3 00       		.byte	0
 1170 00f4 3F       		.uleb128 0x3f
 1171 00f5 19       		.uleb128 0x19
 1172 00f6 03       		.uleb128 0x3
 1173 00f7 0E       		.uleb128 0xe
 1174 00f8 3A       		.uleb128 0x3a
 1175 00f9 0B       		.uleb128 0xb
 1176 00fa 3B       		.uleb128 0x3b
 1177 00fb 05       		.uleb128 0x5
 1178 00fc 27       		.uleb128 0x27
 1179 00fd 19       		.uleb128 0x19
 1180 00fe 11       		.uleb128 0x11
 1181 00ff 01       		.uleb128 0x1
 1182 0100 12       		.uleb128 0x12
 1183 0101 06       		.uleb128 0x6
 1184 0102 40       		.uleb128 0x40
 1185 0103 18       		.uleb128 0x18
 1186 0104 9642     		.uleb128 0x2116
 1187 0106 19       		.uleb128 0x19
 1188 0107 00       		.byte	0
 1189 0108 00       		.byte	0
 1190 0109 0F       		.uleb128 0xf
 1191 010a 34       		.uleb128 0x34
 1192 010b 00       		.byte	0
 1193 010c 03       		.uleb128 0x3
 1194 010d 0E       		.uleb128 0xe
 1195 010e 3A       		.uleb128 0x3a
 1196 010f 0B       		.uleb128 0xb
 1197 0110 3B       		.uleb128 0x3b
 1198 0111 0B       		.uleb128 0xb
 1199 0112 49       		.uleb128 0x49
 1200 0113 13       		.uleb128 0x13
 1201 0114 3F       		.uleb128 0x3f
 1202 0115 19       		.uleb128 0x19
 1203 0116 02       		.uleb128 0x2
 1204 0117 18       		.uleb128 0x18
 1205 0118 00       		.byte	0
 1206 0119 00       		.byte	0
 1207 011a 00       		.byte	0
 1208              		.section	.debug_aranges,"",%progbits
 1209 0000 8C000000 		.4byte	0x8c
 1210 0004 0200     		.2byte	0x2
 1211 0006 00000000 		.4byte	.Ldebug_info0
 1212 000a 04       		.byte	0x4
 1213 000b 00       		.byte	0
 1214 000c 0000     		.2byte	0
 1215 000e 0000     		.2byte	0
 1216 0010 00000000 		.4byte	.LFB0
 1217 0014 48000000 		.4byte	.LFE0-.LFB0
 1218 0018 00000000 		.4byte	.LFB1
 1219 001c 20000000 		.4byte	.LFE1-.LFB1
 1220 0020 00000000 		.4byte	.LFB2
 1221 0024 24000000 		.4byte	.LFE2-.LFB2
 1222 0028 00000000 		.4byte	.LFB3
 1223 002c 20000000 		.4byte	.LFE3-.LFB3
 1224 0030 00000000 		.4byte	.LFB4
 1225 0034 20000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 36


 1226 0038 00000000 		.4byte	.LFB5
 1227 003c 14000000 		.4byte	.LFE5-.LFB5
 1228 0040 00000000 		.4byte	.LFB6
 1229 0044 18000000 		.4byte	.LFE6-.LFB6
 1230 0048 00000000 		.4byte	.LFB7
 1231 004c 18000000 		.4byte	.LFE7-.LFB7
 1232 0050 00000000 		.4byte	.LFB8
 1233 0054 20000000 		.4byte	.LFE8-.LFB8
 1234 0058 00000000 		.4byte	.LFB9
 1235 005c 18000000 		.4byte	.LFE9-.LFB9
 1236 0060 00000000 		.4byte	.LFB10
 1237 0064 20000000 		.4byte	.LFE10-.LFB10
 1238 0068 00000000 		.4byte	.LFB11
 1239 006c 18000000 		.4byte	.LFE11-.LFB11
 1240 0070 00000000 		.4byte	.LFB12
 1241 0074 20000000 		.4byte	.LFE12-.LFB12
 1242 0078 00000000 		.4byte	.LFB13
 1243 007c 20000000 		.4byte	.LFE13-.LFB13
 1244 0080 00000000 		.4byte	.LFB14
 1245 0084 1C000000 		.4byte	.LFE14-.LFB14
 1246 0088 00000000 		.4byte	0
 1247 008c 00000000 		.4byte	0
 1248              		.section	.debug_ranges,"",%progbits
 1249              	.Ldebug_ranges0:
 1250 0000 00000000 		.4byte	.LFB0
 1251 0004 48000000 		.4byte	.LFE0
 1252 0008 00000000 		.4byte	.LFB1
 1253 000c 20000000 		.4byte	.LFE1
 1254 0010 00000000 		.4byte	.LFB2
 1255 0014 24000000 		.4byte	.LFE2
 1256 0018 00000000 		.4byte	.LFB3
 1257 001c 20000000 		.4byte	.LFE3
 1258 0020 00000000 		.4byte	.LFB4
 1259 0024 20000000 		.4byte	.LFE4
 1260 0028 00000000 		.4byte	.LFB5
 1261 002c 14000000 		.4byte	.LFE5
 1262 0030 00000000 		.4byte	.LFB6
 1263 0034 18000000 		.4byte	.LFE6
 1264 0038 00000000 		.4byte	.LFB7
 1265 003c 18000000 		.4byte	.LFE7
 1266 0040 00000000 		.4byte	.LFB8
 1267 0044 20000000 		.4byte	.LFE8
 1268 0048 00000000 		.4byte	.LFB9
 1269 004c 18000000 		.4byte	.LFE9
 1270 0050 00000000 		.4byte	.LFB10
 1271 0054 20000000 		.4byte	.LFE10
 1272 0058 00000000 		.4byte	.LFB11
 1273 005c 18000000 		.4byte	.LFE11
 1274 0060 00000000 		.4byte	.LFB12
 1275 0064 20000000 		.4byte	.LFE12
 1276 0068 00000000 		.4byte	.LFB13
 1277 006c 20000000 		.4byte	.LFE13
 1278 0070 00000000 		.4byte	.LFB14
 1279 0074 1C000000 		.4byte	.LFE14
 1280 0078 00000000 		.4byte	0
 1281 007c 00000000 		.4byte	0
 1282              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 37


 1283              	.Ldebug_line0:
 1284 0000 6C010000 		.section	.debug_str,"MS",%progbits,1
 1284      02004400 
 1284      00000201 
 1284      FB0E0D00 
 1284      01010101 
 1285              	.LASF37:
 1286 0000 433A5C55 		.ascii	"C:\\Users\\cring\\Documents\\GitHub\\PRJ4\\Tryksens"
 1286      73657273 
 1286      5C637269 
 1286      6E675C44 
 1286      6F63756D 
 1287 002d 6F725C54 		.ascii	"or\\Tryksensor.cydsn\000"
 1287      72796B73 
 1287      656E736F 
 1287      722E6379 
 1287      64736E00 
 1288              	.LASF35:
 1289 0041 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1289      43313120 
 1289      352E342E 
 1289      31203230 
 1289      31363036 
 1290 0074 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1290      20726576 
 1290      6973696F 
 1290      6E203233 
 1290      37373135 
 1291 00a7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1291      66756E63 
 1291      74696F6E 
 1291      2D736563 
 1291      74696F6E 
 1292              	.LASF21:
 1293 00cf 54696D65 		.ascii	"Timer_1_SoftwareCapture\000"
 1293      725F315F 
 1293      536F6674 
 1293      77617265 
 1293      43617074 
 1294              	.LASF28:
 1295 00e7 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 1295      725F315F 
 1295      57726974 
 1295      65506572 
 1295      696F6400 
 1296              	.LASF29:
 1297 00fb 70657269 		.ascii	"period\000"
 1297      6F6400
 1298              	.LASF3:
 1299 0102 73686F72 		.ascii	"short unsigned int\000"
 1299      7420756E 
 1299      7369676E 
 1299      65642069 
 1299      6E7400
 1300              	.LASF36:
 1301 0115 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_1.c\000"
 1301      72617465 
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 38


 1301      645F536F 
 1301      75726365 
 1301      5C50536F 
 1302              	.LASF8:
 1303 0136 756E7369 		.ascii	"unsigned int\000"
 1303      676E6564 
 1303      20696E74 
 1303      00
 1304              	.LASF9:
 1305 0143 666C6F61 		.ascii	"float\000"
 1305      7400
 1306              	.LASF32:
 1307 0149 636F756E 		.ascii	"counter\000"
 1307      74657200 
 1308              	.LASF1:
 1309 0151 756E7369 		.ascii	"unsigned char\000"
 1309      676E6564 
 1309      20636861 
 1309      7200
 1310              	.LASF13:
 1311 015f 72656738 		.ascii	"reg8\000"
 1311      00
 1312              	.LASF27:
 1313 0164 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 1313      725F315F 
 1313      52656164 
 1313      50657269 
 1313      6F6400
 1314              	.LASF5:
 1315 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 1315      20756E73 
 1315      69676E65 
 1315      6420696E 
 1315      7400
 1316              	.LASF12:
 1317 0189 75696E74 		.ascii	"uint8\000"
 1317      3800
 1318              	.LASF26:
 1319 018f 636F6E74 		.ascii	"control\000"
 1319      726F6C00 
 1320              	.LASF16:
 1321 0197 54696D65 		.ascii	"Timer_1_Enable\000"
 1321      725F315F 
 1321      456E6162 
 1321      6C6500
 1322              	.LASF10:
 1323 01a6 646F7562 		.ascii	"double\000"
 1323      6C6500
 1324              	.LASF20:
 1325 01ad 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 1325      725F315F 
 1325      53657449 
 1325      6E746572 
 1325      72757074 
 1326              	.LASF39:
 1327 01c6 54696D65 		.ascii	"Timer_1_initVar\000"
 1327      725F315F 
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 39


 1327      696E6974 
 1327      56617200 
 1328              	.LASF24:
 1329 01d6 54696D65 		.ascii	"Timer_1_WriteControlRegister\000"
 1329      725F315F 
 1329      57726974 
 1329      65436F6E 
 1329      74726F6C 
 1330              	.LASF23:
 1331 01f3 54696D65 		.ascii	"Timer_1_ReadControlRegister\000"
 1331      725F315F 
 1331      52656164 
 1331      436F6E74 
 1331      726F6C52 
 1332              	.LASF17:
 1333 020f 54696D65 		.ascii	"Timer_1_Start\000"
 1333      725F315F 
 1333      53746172 
 1333      7400
 1334              	.LASF19:
 1335 021d 54696D65 		.ascii	"Timer_1_Init\000"
 1335      725F315F 
 1335      496E6974 
 1335      00
 1336              	.LASF7:
 1337 022a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1337      206C6F6E 
 1337      6720756E 
 1337      7369676E 
 1337      65642069 
 1338              	.LASF31:
 1339 0241 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 1339      725F315F 
 1339      57726974 
 1339      65436F75 
 1339      6E746572 
 1340              	.LASF30:
 1341 0256 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 1341      725F315F 
 1341      52656164 
 1341      43617074 
 1341      75726500 
 1342              	.LASF38:
 1343 026a 54696D65 		.ascii	"Timer_1_interruptState\000"
 1343      725F315F 
 1343      696E7465 
 1343      72727570 
 1343      74537461 
 1344              	.LASF15:
 1345 0281 73697A65 		.ascii	"sizetype\000"
 1345      74797065 
 1345      00
 1346              	.LASF6:
 1347 028a 6C6F6E67 		.ascii	"long long int\000"
 1347      206C6F6E 
 1347      6720696E 
 1347      7400
ARM GAS  C:\Users\cring\AppData\Local\Temp\ccz7Z60P.s 			page 40


 1348              	.LASF25:
 1349 0298 696E7465 		.ascii	"interruptMode\000"
 1349      72727570 
 1349      744D6F64 
 1349      6500
 1350              	.LASF33:
 1351 02a6 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 1351      725F315F 
 1351      52656164 
 1351      436F756E 
 1351      74657200 
 1352              	.LASF34:
 1353 02ba 54696D65 		.ascii	"Timer_1_ClearFIFO\000"
 1353      725F315F 
 1353      436C6561 
 1353      72464946 
 1353      4F00
 1354              	.LASF2:
 1355 02cc 73686F72 		.ascii	"short int\000"
 1355      7420696E 
 1355      7400
 1356              	.LASF22:
 1357 02d6 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1357      725F315F 
 1357      52656164 
 1357      53746174 
 1357      75735265 
 1358              	.LASF4:
 1359 02f1 6C6F6E67 		.ascii	"long int\000"
 1359      20696E74 
 1359      00
 1360              	.LASF11:
 1361 02fa 63686172 		.ascii	"char\000"
 1361      00
 1362              	.LASF14:
 1363 02ff 6C6F6E67 		.ascii	"long double\000"
 1363      20646F75 
 1363      626C6500 
 1364              	.LASF0:
 1365 030b 7369676E 		.ascii	"signed char\000"
 1365      65642063 
 1365      68617200 
 1366              	.LASF18:
 1367 0317 54696D65 		.ascii	"Timer_1_Stop\000"
 1367      725F315F 
 1367      53746F70 
 1367      00
 1368              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
